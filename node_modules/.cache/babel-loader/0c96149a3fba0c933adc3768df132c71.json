{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Liran\\\\.cursor-tutor\\\\srt-translator\\\\src\\\\components\\\\FileUploader.js\";\nimport React, { useState } from 'react';\nimport { uploadFile } from '../client';\nimport SubtitlePreview from './SubtitlePreview';\nimport styles from './FileUploader.module.css';\nimport { translateSRT } from '../client';\nfunction FileUploader() {\n  const [isLoading, setIsLoading] = useState(false);\n  const [message, setMessage] = useState('');\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [fileContent, setFileContent] = useState('');\n  const [targetLanguage, setTargetLanguage] = useState('en');\n  const [translatedContent, setTranslatedContent] = useState('');\n  const [translationProgress, setTranslationProgress] = useState(0);\n  const languages = {\n    he: 'עברית',\n    en: 'אנגלית',\n    es: 'ספרדית',\n    fr: 'צרפתית',\n    de: 'גרמנית',\n    ru: 'רוסית',\n    ar: 'ערבית'\n  };\n  const handleFileUpload = async event => {\n    const file = event.target.files[0];\n    if (file) {\n      setSelectedFile(file);\n      setMessage('');\n      setIsLoading(true);\n      setTranslatedContent('');\n      try {\n        const content = await readFileContent(file);\n        setFileContent(content);\n        await uploadFile(file);\n        setMessage('הקובץ הועלה בהצלחה!');\n      } catch (error) {\n        setMessage('שגיאה בהעלאת הקובץ: ' + error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    }\n  };\n  const readFileContent = file => {\n    return new Promise((resolve, reject) => {\n      const reader = new FileReader();\n      reader.onload = e => resolve(e.target.result);\n      reader.onerror = e => reject(e);\n      reader.readAsText(file);\n    });\n  };\n  const handleTranslate = async () => {\n    if (!fileContent) return;\n    setIsLoading(true);\n    setTranslationProgress(0);\n    try {\n      const translated = await translateSRT(fileContent, targetLanguage, progress => {\n        setTranslationProgress(progress);\n      });\n      setTranslatedContent(translated);\n      setMessage(`תורגם בהצלחה ל${languages[targetLanguage]}`);\n    } catch (error) {\n      setMessage('שגיאה בתרגום: ' + error.message);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const handleDownload = () => {\n    if (!translatedContent) return;\n    const blob = new Blob([translatedContent], {\n      type: 'text/plain;charset=utf-8'\n    });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = selectedFile ? `translated_${selectedFile.name}` : 'translated.srt';\n    document.body.appendChild(a);\n    a.click();\n    document.body.removeChild(a);\n    URL.revokeObjectURL(url);\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.fileUploader,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    accept: \".srt\",\n    onChange: handleFileUpload,\n    disabled: isLoading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }\n  }), fileContent && /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"select\", {\n    className: styles.select,\n    value: targetLanguage,\n    onChange: e => setTargetLanguage(e.target.value),\n    disabled: isLoading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 11\n    }\n  }, Object.entries(languages).map(([code, name]) => /*#__PURE__*/React.createElement(\"option\", {\n    key: code,\n    value: code,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 15\n    }\n  }, name))), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleTranslate,\n    disabled: isLoading,\n    className: styles.translateButton,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 11\n    }\n  }, isLoading ? 'מתרגם...' : 'תרגם')), isLoading && translationProgress > 0 && /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.progressContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.progressBar,\n    style: {\n      width: `${translationProgress}%`\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 11\n    }\n  }, translationProgress, \"%\")), message && /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.message,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 19\n    }\n  }, message), translatedContent && !isLoading && /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleDownload,\n    className: styles.downloadButton,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 9\n    }\n  }, \"\\u05D4\\u05D5\\u05E8\\u05D3 \\u05E7\\u05D5\\u05D1\\u05E5 \\u05DE\\u05EA\\u05D5\\u05E8\\u05D2\\u05DD\"), translatedContent && /*#__PURE__*/React.createElement(SubtitlePreview, {\n    content: translatedContent,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 9\n    }\n  }));\n}\nexport default FileUploader;","map":{"version":3,"names":["React","useState","uploadFile","SubtitlePreview","styles","translateSRT","FileUploader","isLoading","setIsLoading","message","setMessage","selectedFile","setSelectedFile","fileContent","setFileContent","targetLanguage","setTargetLanguage","translatedContent","setTranslatedContent","translationProgress","setTranslationProgress","languages","he","en","es","fr","de","ru","ar","handleFileUpload","event","file","target","files","content","readFileContent","error","Promise","resolve","reject","reader","FileReader","onload","e","result","onerror","readAsText","handleTranslate","translated","progress","handleDownload","blob","Blob","type","url","URL","createObjectURL","a","document","createElement","href","download","name","body","appendChild","click","removeChild","revokeObjectURL","className","fileUploader","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","accept","onChange","disabled","select","value","Object","entries","map","code","key","onClick","translateButton","progressContainer","progressBar","style","width","downloadButton"],"sources":["C:/Users/Liran/.cursor-tutor/srt-translator/src/components/FileUploader.js"],"sourcesContent":["import React, { useState } from 'react'\r\nimport { uploadFile } from '../client'\r\nimport SubtitlePreview from './SubtitlePreview'\r\nimport styles from './FileUploader.module.css'\r\nimport { translateSRT } from '../client'\r\n\r\nfunction FileUploader() {\r\n  const [isLoading, setIsLoading] = useState(false)\r\n  const [message, setMessage] = useState('')\r\n  const [selectedFile, setSelectedFile] = useState(null)\r\n  const [fileContent, setFileContent] = useState('')\r\n  const [targetLanguage, setTargetLanguage] = useState('en')\r\n  const [translatedContent, setTranslatedContent] = useState('')\r\n  const [translationProgress, setTranslationProgress] = useState(0)\r\n\r\n  const languages = {\r\n    he: 'עברית',\r\n    en: 'אנגלית',\r\n    es: 'ספרדית',\r\n    fr: 'צרפתית',\r\n    de: 'גרמנית',\r\n    ru: 'רוסית',\r\n    ar: 'ערבית'\r\n  }\r\n\r\n  const handleFileUpload = async (event) => {\r\n    const file = event.target.files[0]\r\n    if (file) {\r\n      setSelectedFile(file)\r\n      setMessage('')\r\n      setIsLoading(true)\r\n      setTranslatedContent('')\r\n      \r\n      try {\r\n        const content = await readFileContent(file)\r\n        setFileContent(content)\r\n        await uploadFile(file)\r\n        setMessage('הקובץ הועלה בהצלחה!')\r\n      } catch (error) {\r\n        setMessage('שגיאה בהעלאת הקובץ: ' + error.message)\r\n      } finally {\r\n        setIsLoading(false)\r\n      }\r\n    }\r\n  }\r\n\r\n  const readFileContent = (file) => {\r\n    return new Promise((resolve, reject) => {\r\n      const reader = new FileReader()\r\n      reader.onload = (e) => resolve(e.target.result)\r\n      reader.onerror = (e) => reject(e)\r\n      reader.readAsText(file)\r\n    })\r\n  }\r\n\r\n  const handleTranslate = async () => {\r\n    if (!fileContent) return;\r\n    \r\n    setIsLoading(true);\r\n    setTranslationProgress(0);\r\n    \r\n    try {\r\n      const translated = await translateSRT(fileContent, targetLanguage, (progress) => {\r\n        setTranslationProgress(progress);\r\n      });\r\n      \r\n      setTranslatedContent(translated);\r\n      setMessage(`תורגם בהצלחה ל${languages[targetLanguage]}`);\r\n    } catch (error) {\r\n      setMessage('שגיאה בתרגום: ' + error.message);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleDownload = () => {\r\n    if (!translatedContent) return;\r\n\r\n    const blob = new Blob([translatedContent], { type: 'text/plain;charset=utf-8' });\r\n    const url = URL.createObjectURL(blob);\r\n    const a = document.createElement('a');\r\n    a.href = url;\r\n    a.download = selectedFile ? `translated_${selectedFile.name}` : 'translated.srt';\r\n    document.body.appendChild(a);\r\n    a.click();\r\n    document.body.removeChild(a);\r\n    URL.revokeObjectURL(url);\r\n  };\r\n\r\n  return (\r\n    <div className={styles.fileUploader}>\r\n      <input \r\n        type=\"file\" \r\n        accept=\".srt\"\r\n        onChange={handleFileUpload}\r\n        disabled={isLoading}\r\n      />\r\n      \r\n      {fileContent && (\r\n        <div>\r\n          <select\r\n            className={styles.select}\r\n            value={targetLanguage}\r\n            onChange={(e) => setTargetLanguage(e.target.value)}\r\n            disabled={isLoading}\r\n          >\r\n            {Object.entries(languages).map(([code, name]) => (\r\n              <option key={code} value={code}>{name}</option>\r\n            ))}\r\n          </select>\r\n          \r\n          <button \r\n            onClick={handleTranslate}\r\n            disabled={isLoading}\r\n            className={styles.translateButton}\r\n          >\r\n            {isLoading ? 'מתרגם...' : 'תרגם'}\r\n          </button>\r\n        </div>\r\n      )}\r\n\r\n      {isLoading && translationProgress > 0 && (\r\n        <div className={styles.progressContainer}>\r\n          <div \r\n            className={styles.progressBar}\r\n            style={{ width: `${translationProgress}%` }}\r\n          >\r\n            {translationProgress}%\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {message && <div className={styles.message}>{message}</div>}\r\n\r\n      {translatedContent && !isLoading && (\r\n        <button \r\n          onClick={handleDownload}\r\n          className={styles.downloadButton}\r\n        >\r\n          הורד קובץ מתורגם\r\n        </button>\r\n      )}\r\n\r\n      {translatedContent && (\r\n        <SubtitlePreview content={translatedContent} />\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default FileUploader"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}