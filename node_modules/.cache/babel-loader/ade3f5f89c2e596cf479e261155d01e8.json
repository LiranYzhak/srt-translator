{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Liran\\\\.cursor-tutor\\\\srt-translator\\\\src\\\\components\\\\FileUploader.js\";\nimport React, { useState, useRef } from 'react';\nimport { useApp } from '../context/AppContext';\nimport styles from './FileUploader.module.css';\nimport { FiUploadCloud, FiDownload, FiGlobe, FiMoon, FiSun } from 'react-icons/fi';\nimport { AZURE_CONFIG } from '../config/azure';\nfunction FileUploader() {\n  const {\n    t,\n    interfaceLanguage,\n    isDarkMode,\n    changeLanguage,\n    toggleTheme\n  } = useApp();\n  const [isLoading, setIsLoading] = useState(false);\n  const [message, setMessage] = useState('');\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [fileContent, setFileContent] = useState('');\n  const [targetLanguage, setTargetLanguage] = useState('he');\n  const [translatedContent, setTranslatedContent] = useState('');\n  const [translationProgress, setTranslationProgress] = useState(0);\n  const [detectedLanguage, setDetectedLanguage] = useState('');\n  const fileInputRef = useRef(null);\n  const languages = {\n    'af': 'אפריקאנס',\n    'ar': 'ערבית',\n    'bg': 'בולגרית',\n    'bn': 'בנגלית',\n    'bs': 'בוסנית',\n    'ca': 'קטלאנית',\n    'cs': 'צ׳כית',\n    'cy': 'וולשית',\n    'da': 'דנית',\n    'de': 'גרמנית',\n    'el': 'יוונית',\n    'en': 'אנגלית',\n    'es': 'ספרדית',\n    'et': 'אסטונית',\n    'fa': 'פרסית',\n    'fi': 'פינית',\n    'fr': 'צרפתית',\n    'he': 'עברית',\n    'hi': 'הינדי',\n    'hr': 'קרואטית',\n    'hu': 'הונגרית',\n    'id': 'אינדונזית',\n    'is': 'איסלנדית',\n    'it': 'איטלקית',\n    'ja': 'יפנית',\n    'ko': 'קוריאנית',\n    'lt': 'ליטאית',\n    'lv': 'לטבית',\n    'ms': 'מלאית',\n    'mt': 'מלטזית',\n    'nl': 'הולנדית',\n    'no': 'נורווגית',\n    'pl': 'פולנית',\n    'pt': 'פורטוגזית',\n    'ro': 'רומנית',\n    'ru': 'רוסית',\n    'sk': 'סלובקית',\n    'sl': 'סלובנית',\n    'sv': 'שוודית',\n    'sw': 'סווהילי',\n    'th': 'תאית',\n    'tr': 'טורקית',\n    'uk': 'אוקראינית',\n    'ur': 'אורדו',\n    'vi': 'וייטנאמית',\n    'zh-Hans': 'סינית פשוטה',\n    'zh-Hant': 'סינית מסורתית'\n  };\n  const interfaceLanguages = {\n    he: 'עברית',\n    en: 'English',\n    ar: 'العربية',\n    ru: 'Русский'\n  };\n  const handleDragOver = e => {\n    e.preventDefault();\n    e.currentTarget.classList.add(styles.dragOver);\n  };\n  const handleDragLeave = e => {\n    e.preventDefault();\n    e.currentTarget.classList.remove(styles.dragOver);\n  };\n  const handleDrop = e => {\n    e.preventDefault();\n    e.currentTarget.classList.remove(styles.dragOver);\n    const file = e.dataTransfer.files[0];\n    if (file && file.name.endsWith('.srt')) {\n      handleFileUpload({\n        target: {\n          files: [file]\n        }\n      });\n    }\n  };\n  const readFileContent = file => {\n    return new Promise((resolve, reject) => {\n      const reader = new FileReader();\n      reader.onload = e => resolve(e.target.result);\n      reader.onerror = e => reject(e);\n      reader.readAsText(file);\n    });\n  };\n  const handleFileUpload = async event => {\n    const file = event.target.files[0];\n    if (file) {\n      setSelectedFile(file);\n      setMessage('');\n      setIsLoading(true);\n      try {\n        const content = await readFileContent(file);\n        setFileContent(content);\n        const detectedLang = await detectLanguage(content.slice(0, 1000));\n        setDetectedLanguage(detectedLang);\n        setMessage(t.uploadSuccess);\n      } catch (error) {\n        setMessage(t.uploadError);\n      } finally {\n        setIsLoading(false);\n      }\n    }\n  };\n  const detectLanguage = async text => {\n    try {\n      const response = await fetch(`${AZURE_CONFIG.endpoint}/detect?api-version=3.0`, {\n        method: 'POST',\n        headers: {\n          'Ocp-Apim-Subscription-Key': AZURE_CONFIG.key,\n          'Ocp-Apim-Subscription-Region': AZURE_CONFIG.region,\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify([{\n          text\n        }])\n      });\n      if (!response.ok) {\n        const errorData = await response.json();\n        console.error('Azure API Error:', errorData);\n        throw new Error(`Language detection failed: ${response.status}`);\n      }\n      const [result] = await response.json();\n      return result.language;\n    } catch (error) {\n      console.error('Error detecting language:', error);\n      throw error;\n    }\n  };\n  const translateText = async (text, targetLang) => {\n    const endpoint = AZURE_CONFIG.endpoint;\n    const key = AZURE_CONFIG.key;\n    try {\n      const response = await fetch(`${endpoint}/translate?api-version=3.0&to=${targetLang}`, {\n        method: 'POST',\n        headers: {\n          'Ocp-Apim-Subscription-Key': key,\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify([{\n          text\n        }])\n      });\n      if (!response.ok) throw new Error('Translation failed');\n      const [result] = await response.json();\n      return result.translations[0].text;\n    } catch (error) {\n      console.error('Error translating text:', error);\n      throw error;\n    }\n  };\n  const handleTranslate = async () => {\n    if (!fileContent || !targetLanguage) return;\n    setIsLoading(true);\n    setTranslationProgress(0);\n    try {\n      const lines = fileContent.split('\\n');\n      const translatedLines = [];\n      let progress = 0;\n      for (let i = 0; i < lines.length; i++) {\n        const line = lines[i];\n        if (!/^\\d/.test(line.trim()) && !/^\\d{2}:\\d{2}:\\d{2}/.test(line.trim()) && line.trim()) {\n          const translatedLine = await translateText(line, targetLanguage);\n          translatedLines.push(translatedLine);\n        } else {\n          translatedLines.push(line);\n        }\n        progress = Math.round((i + 1) / lines.length * 100);\n        setTranslationProgress(progress);\n      }\n      setTranslatedContent(translatedLines.join('\\n'));\n      setMessage(t.translationSuccess);\n    } catch (error) {\n      setMessage(t.translationError);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const handleDownload = () => {\n    if (!translatedContent) return;\n    const blob = new Blob([translatedContent], {\n      type: 'text/plain'\n    });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = `translated_${selectedFile.name}`;\n    document.body.appendChild(a);\n    a.click();\n    document.body.removeChild(a);\n    URL.revokeObjectURL(url);\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: `${styles.container} ${isDarkMode ? styles.dark : ''}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.header,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.languageToggle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FiGlobe, {\n    className: styles.icon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"select\", {\n    value: interfaceLanguage,\n    onChange: e => changeLanguage(e.target.value),\n    className: styles.languageSelector,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 11\n    }\n  }, Object.entries(interfaceLanguages).map(([code, name]) => /*#__PURE__*/React.createElement(\"option\", {\n    key: code,\n    value: code,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 15\n    }\n  }, name)))), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: toggleTheme,\n    className: styles.themeToggle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 9\n    }\n  }, isDarkMode ? /*#__PURE__*/React.createElement(FiSun, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 25\n    }\n  }) : /*#__PURE__*/React.createElement(FiMoon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 37\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.uploadSection,\n    onDragOver: handleDragOver,\n    onDragLeave: handleDragLeave,\n    onDrop: handleDrop,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    ref: fileInputRef,\n    type: \"file\",\n    accept: \".srt\",\n    onChange: handleFileUpload,\n    className: styles.hiddenInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.uploadContent,\n    onClick: () => fileInputRef.current.click(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FiUploadCloud, {\n    className: styles.uploadIcon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 11\n    }\n  }, t.uploadFile), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 11\n    }\n  }, t.dragAndDrop))), fileContent && /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.translationSection,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 9\n    }\n  }, detectedLanguage && /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.detectedLanguage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FiGlobe, {\n    className: styles.icon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 15\n    }\n  }), t.detectedLanguage, \" \", languages[detectedLanguage]), /*#__PURE__*/React.createElement(\"select\", {\n    className: styles.targetLanguageSelect,\n    value: targetLanguage,\n    onChange: e => setTargetLanguage(e.target.value),\n    disabled: isLoading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 13\n    }\n  }, t.selectTargetLanguage), Object.entries(languages).filter(([code]) => code !== detectedLanguage).map(([code, name]) => /*#__PURE__*/React.createElement(\"option\", {\n    key: code,\n    value: code,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 17\n    }\n  }, name))), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleTranslate,\n    disabled: isLoading || targetLanguage === detectedLanguage,\n    className: styles.translateButton,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 11\n    }\n  }, isLoading ? t.translating : t.translate)), isLoading && translationProgress > 0 && /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.progressContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.progressBar,\n    style: {\n      width: `${translationProgress}%`\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: styles.progressText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 13\n    }\n  }, translationProgress, \"%\"))), message && /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.message,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 9\n    }\n  }, message), translatedContent && !isLoading && /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleDownload,\n    className: styles.downloadButton,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 321,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FiDownload, {\n    className: styles.icon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 325,\n      columnNumber: 11\n    }\n  }), t.downloadFile));\n}\nexport default FileUploader;","map":{"version":3,"names":["React","useState","useRef","useApp","styles","FiUploadCloud","FiDownload","FiGlobe","FiMoon","FiSun","AZURE_CONFIG","FileUploader","t","interfaceLanguage","isDarkMode","changeLanguage","toggleTheme","isLoading","setIsLoading","message","setMessage","selectedFile","setSelectedFile","fileContent","setFileContent","targetLanguage","setTargetLanguage","translatedContent","setTranslatedContent","translationProgress","setTranslationProgress","detectedLanguage","setDetectedLanguage","fileInputRef","languages","interfaceLanguages","he","en","ar","ru","handleDragOver","e","preventDefault","currentTarget","classList","add","dragOver","handleDragLeave","remove","handleDrop","file","dataTransfer","files","name","endsWith","handleFileUpload","target","readFileContent","Promise","resolve","reject","reader","FileReader","onload","result","onerror","readAsText","event","content","detectedLang","detectLanguage","slice","uploadSuccess","error","uploadError","text","response","fetch","endpoint","method","headers","key","region","body","JSON","stringify","ok","errorData","json","console","Error","status","language","translateText","targetLang","translations","handleTranslate","lines","split","translatedLines","progress","i","length","line","test","trim","translatedLine","push","Math","round","join","translationSuccess","translationError","handleDownload","blob","Blob","type","url","URL","createObjectURL","a","document","createElement","href","download","appendChild","click","removeChild","revokeObjectURL","className","container","dark","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","header","languageToggle","icon","value","onChange","languageSelector","Object","entries","map","code","onClick","themeToggle","uploadSection","onDragOver","onDragLeave","onDrop","ref","accept","hiddenInput","uploadContent","current","uploadIcon","uploadFile","dragAndDrop","translationSection","targetLanguageSelect","disabled","selectTargetLanguage","filter","translateButton","translating","translate","progressContainer","progressBar","style","width","progressText","downloadButton","downloadFile"],"sources":["C:/Users/Liran/.cursor-tutor/srt-translator/src/components/FileUploader.js"],"sourcesContent":["import React, { useState, useRef } from 'react';\r\nimport { useApp } from '../context/AppContext';\r\nimport styles from './FileUploader.module.css';\r\nimport { FiUploadCloud, FiDownload, FiGlobe, FiMoon, FiSun } from 'react-icons/fi';\r\nimport { AZURE_CONFIG } from '../config/azure';\r\n\r\nfunction FileUploader() {\r\n  const { t, interfaceLanguage, isDarkMode, changeLanguage, toggleTheme } = useApp();\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [message, setMessage] = useState('');\r\n  const [selectedFile, setSelectedFile] = useState(null);\r\n  const [fileContent, setFileContent] = useState('');\r\n  const [targetLanguage, setTargetLanguage] = useState('he');\r\n  const [translatedContent, setTranslatedContent] = useState('');\r\n  const [translationProgress, setTranslationProgress] = useState(0);\r\n  const [detectedLanguage, setDetectedLanguage] = useState('');\r\n  const fileInputRef = useRef(null);\r\n\r\n  const languages = {\r\n    'af': 'אפריקאנס',\r\n    'ar': 'ערבית',\r\n    'bg': 'בולגרית',\r\n    'bn': 'בנגלית',\r\n    'bs': 'בוסנית',\r\n    'ca': 'קטלאנית',\r\n    'cs': 'צ׳כית',\r\n    'cy': 'וולשית',\r\n    'da': 'דנית',\r\n    'de': 'גרמנית',\r\n    'el': 'יוונית',\r\n    'en': 'אנגלית',\r\n    'es': 'ספרדית',\r\n    'et': 'אסטונית',\r\n    'fa': 'פרסית',\r\n    'fi': 'פינית',\r\n    'fr': 'צרפתית',\r\n    'he': 'עברית',\r\n    'hi': 'הינדי',\r\n    'hr': 'קרואטית',\r\n    'hu': 'הונגרית',\r\n    'id': 'אינדונזית',\r\n    'is': 'איסלנדית',\r\n    'it': 'איטלקית',\r\n    'ja': 'יפנית',\r\n    'ko': 'קוריאנית',\r\n    'lt': 'ליטאית',\r\n    'lv': 'לטבית',\r\n    'ms': 'מלאית',\r\n    'mt': 'מלטזית',\r\n    'nl': 'הולנדית',\r\n    'no': 'נורווגית',\r\n    'pl': 'פולנית',\r\n    'pt': 'פורטוגזית',\r\n    'ro': 'רומנית',\r\n    'ru': 'רוסית',\r\n    'sk': 'סלובקית',\r\n    'sl': 'סלובנית',\r\n    'sv': 'שוודית',\r\n    'sw': 'סווהילי',\r\n    'th': 'תאית',\r\n    'tr': 'טורקית',\r\n    'uk': 'אוקראינית',\r\n    'ur': 'אורדו',\r\n    'vi': 'וייטנאמית',\r\n    'zh-Hans': 'סינית פשוטה',\r\n    'zh-Hant': 'סינית מסורתית'\r\n  };\r\n\r\n  const interfaceLanguages = {\r\n    he: 'עברית',\r\n    en: 'English',\r\n    ar: 'العربية',\r\n    ru: 'Русский'\r\n  };\r\n\r\n  const handleDragOver = (e) => {\r\n    e.preventDefault();\r\n    e.currentTarget.classList.add(styles.dragOver);\r\n  };\r\n\r\n  const handleDragLeave = (e) => {\r\n    e.preventDefault();\r\n    e.currentTarget.classList.remove(styles.dragOver);\r\n  };\r\n\r\n  const handleDrop = (e) => {\r\n    e.preventDefault();\r\n    e.currentTarget.classList.remove(styles.dragOver);\r\n    const file = e.dataTransfer.files[0];\r\n    if (file && file.name.endsWith('.srt')) {\r\n      handleFileUpload({ target: { files: [file] } });\r\n    }\r\n  };\r\n\r\n  const readFileContent = (file) => {\r\n    return new Promise((resolve, reject) => {\r\n      const reader = new FileReader();\r\n      reader.onload = (e) => resolve(e.target.result);\r\n      reader.onerror = (e) => reject(e);\r\n      reader.readAsText(file);\r\n    });\r\n  };\r\n\r\n  const handleFileUpload = async (event) => {\r\n    const file = event.target.files[0];\r\n    if (file) {\r\n      setSelectedFile(file);\r\n      setMessage('');\r\n      setIsLoading(true);\r\n      \r\n      try {\r\n        const content = await readFileContent(file);\r\n        setFileContent(content);\r\n        const detectedLang = await detectLanguage(content.slice(0, 1000));\r\n        setDetectedLanguage(detectedLang);\r\n        setMessage(t.uploadSuccess);\r\n      } catch (error) {\r\n        setMessage(t.uploadError);\r\n      } finally {\r\n        setIsLoading(false);\r\n      }\r\n    }\r\n  };\r\n\r\n  const detectLanguage = async (text) => {\r\n    try {\r\n      const response = await fetch(`${AZURE_CONFIG.endpoint}/detect?api-version=3.0`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Ocp-Apim-Subscription-Key': AZURE_CONFIG.key,\r\n          'Ocp-Apim-Subscription-Region': AZURE_CONFIG.region,\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify([{ text }])\r\n      });\r\n\r\n      if (!response.ok) {\r\n        const errorData = await response.json();\r\n        console.error('Azure API Error:', errorData);\r\n        throw new Error(`Language detection failed: ${response.status}`);\r\n      }\r\n\r\n      const [result] = await response.json();\r\n      return result.language;\r\n    } catch (error) {\r\n      console.error('Error detecting language:', error);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const translateText = async (text, targetLang) => {\r\n    const endpoint = AZURE_CONFIG.endpoint;\r\n    const key = AZURE_CONFIG.key;\r\n\r\n    try {\r\n      const response = await fetch(\r\n        `${endpoint}/translate?api-version=3.0&to=${targetLang}`,\r\n        {\r\n          method: 'POST',\r\n          headers: {\r\n            'Ocp-Apim-Subscription-Key': key,\r\n            'Content-Type': 'application/json',\r\n          },\r\n          body: JSON.stringify([{ text }]),\r\n        }\r\n      );\r\n\r\n      if (!response.ok) throw new Error('Translation failed');\r\n\r\n      const [result] = await response.json();\r\n      return result.translations[0].text;\r\n    } catch (error) {\r\n      console.error('Error translating text:', error);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const handleTranslate = async () => {\r\n    if (!fileContent || !targetLanguage) return;\r\n    \r\n    setIsLoading(true);\r\n    setTranslationProgress(0);\r\n    \r\n    try {\r\n      const lines = fileContent.split('\\n');\r\n      const translatedLines = [];\r\n      let progress = 0;\r\n\r\n      for (let i = 0; i < lines.length; i++) {\r\n        const line = lines[i];\r\n        if (!/^\\d/.test(line.trim()) && !/^\\d{2}:\\d{2}:\\d{2}/.test(line.trim()) && line.trim()) {\r\n          const translatedLine = await translateText(line, targetLanguage);\r\n          translatedLines.push(translatedLine);\r\n        } else {\r\n          translatedLines.push(line);\r\n        }\r\n\r\n        progress = Math.round(((i + 1) / lines.length) * 100);\r\n        setTranslationProgress(progress);\r\n      }\r\n\r\n      setTranslatedContent(translatedLines.join('\\n'));\r\n      setMessage(t.translationSuccess);\r\n    } catch (error) {\r\n      setMessage(t.translationError);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleDownload = () => {\r\n    if (!translatedContent) return;\r\n    \r\n    const blob = new Blob([translatedContent], { type: 'text/plain' });\r\n    const url = URL.createObjectURL(blob);\r\n    const a = document.createElement('a');\r\n    a.href = url;\r\n    a.download = `translated_${selectedFile.name}`;\r\n    document.body.appendChild(a);\r\n    a.click();\r\n    document.body.removeChild(a);\r\n    URL.revokeObjectURL(url);\r\n  };\r\n\r\n  return (\r\n    <div className={`${styles.container} ${isDarkMode ? styles.dark : ''}`}>\r\n      <div className={styles.header}>\r\n        <div className={styles.languageToggle}>\r\n          <FiGlobe className={styles.icon} />\r\n          <select\r\n            value={interfaceLanguage}\r\n            onChange={(e) => changeLanguage(e.target.value)}\r\n            className={styles.languageSelector}\r\n          >\r\n            {Object.entries(interfaceLanguages).map(([code, name]) => (\r\n              <option key={code} value={code}>{name}</option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n        \r\n        <button \r\n          onClick={toggleTheme}\r\n          className={styles.themeToggle}\r\n        >\r\n          {isDarkMode ? <FiSun /> : <FiMoon />}\r\n        </button>\r\n      </div>\r\n\r\n      <div \r\n        className={styles.uploadSection}\r\n        onDragOver={handleDragOver}\r\n        onDragLeave={handleDragLeave}\r\n        onDrop={handleDrop}\r\n      >\r\n        <input\r\n          ref={fileInputRef}\r\n          type=\"file\"\r\n          accept=\".srt\"\r\n          onChange={handleFileUpload}\r\n          className={styles.hiddenInput}\r\n        />\r\n        \r\n        <div className={styles.uploadContent} onClick={() => fileInputRef.current.click()}>\r\n          <FiUploadCloud className={styles.uploadIcon} />\r\n          <h3>{t.uploadFile}</h3>\r\n          <p>{t.dragAndDrop}</p>\r\n        </div>\r\n      </div>\r\n\r\n      {fileContent && (\r\n        <div className={styles.translationSection}>\r\n          {detectedLanguage && (\r\n            <div className={styles.detectedLanguage}>\r\n              <FiGlobe className={styles.icon} />\r\n              {t.detectedLanguage} {languages[detectedLanguage]}\r\n            </div>\r\n          )}\r\n          \r\n          <select\r\n            className={styles.targetLanguageSelect}\r\n            value={targetLanguage}\r\n            onChange={(e) => setTargetLanguage(e.target.value)}\r\n            disabled={isLoading}\r\n          >\r\n            <option value=\"\">{t.selectTargetLanguage}</option>\r\n            {Object.entries(languages)\r\n              .filter(([code]) => code !== detectedLanguage)\r\n              .map(([code, name]) => (\r\n                <option key={code} value={code}>{name}</option>\r\n              ))}\r\n          </select>\r\n\r\n          <button\r\n            onClick={handleTranslate}\r\n            disabled={isLoading || targetLanguage === detectedLanguage}\r\n            className={styles.translateButton}\r\n          >\r\n            {isLoading ? t.translating : t.translate}\r\n          </button>\r\n        </div>\r\n      )}\r\n\r\n      {isLoading && translationProgress > 0 && (\r\n        <div className={styles.progressContainer}>\r\n          <div\r\n            className={styles.progressBar}\r\n            style={{ width: `${translationProgress}%` }}\r\n          >\r\n            <span className={styles.progressText}>{translationProgress}%</span>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {message && (\r\n        <div className={styles.message}>\r\n          {message}\r\n        </div>\r\n      )}\r\n\r\n      {translatedContent && !isLoading && (\r\n        <button\r\n          onClick={handleDownload}\r\n          className={styles.downloadButton}\r\n        >\r\n          <FiDownload className={styles.icon} />\r\n          {t.downloadFile}\r\n        </button>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FileUploader;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}