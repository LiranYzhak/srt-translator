{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Liran\\\\.cursor-tutor\\\\srt-translator\\\\src\\\\components\\\\FileUploader.js\";\nimport React, { useState, useEffect } from 'react';\nimport { uploadFile } from '../client';\nimport SubtitlePreview from './SubtitlePreview';\nimport styles from './FileUploader.module.css';\nimport { translateSRT } from '../client';\nimport { useApp } from '../context/AppContext';\nfunction FileUploader() {\n  const {\n    t,\n    interfaceLanguage,\n    isDarkMode,\n    changeLanguage,\n    toggleTheme\n  } = useApp();\n  const [isLoading, setIsLoading] = useState(false);\n  const [message, setMessage] = useState('');\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [fileContent, setFileContent] = useState('');\n  const [targetLanguage, setTargetLanguage] = useState('he');\n  const [translatedContent, setTranslatedContent] = useState('');\n  const [translationProgress, setTranslationProgress] = useState(0);\n  const [detectedLanguage, setDetectedLanguage] = useState('');\n  const languages = {\n    'af': 'אפריקאנס',\n    'ar': 'ערבית',\n    'bg': 'בולגרית',\n    'bn': 'בנגלית',\n    'bs': 'בוסנית',\n    'ca': 'קטלאנית',\n    'cs': 'צ׳כית',\n    'cy': 'וולשית',\n    'da': 'דנית',\n    'de': 'גרמנית',\n    'el': 'יוונית',\n    'en': 'אנגלית',\n    'es': 'ספרדית',\n    'et': 'אסטונית',\n    'fa': 'פרסית',\n    'fi': 'פינית',\n    'fr': 'צרפתית',\n    'he': 'עברית',\n    'hi': 'הינדי',\n    'hr': 'קרואטית',\n    'hu': 'הונגרית',\n    'id': 'אינדונזית',\n    'is': 'איסלנדית',\n    'it': 'איטלקית',\n    'ja': 'יפנית',\n    'ko': 'קוריאנית',\n    'lt': 'ליטאית',\n    'lv': 'לטבית',\n    'ms': 'מלאית',\n    'mt': 'מלטזית',\n    'nl': 'הולנדית',\n    'no': 'נורווגית',\n    'pl': 'פולנית',\n    'pt': 'פורטוגזית',\n    'ro': 'רומנית',\n    'ru': 'רוסית',\n    'sk': 'סלובקית',\n    'sl': 'סלובנית',\n    'sv': 'שוודית',\n    'sw': 'סווהילי',\n    'th': 'תאית',\n    'tr': 'טורקית',\n    'uk': 'אוקראינית',\n    'ur': 'אורדו',\n    'vi': 'וייטנאמית',\n    'zh-Hans': 'סינית פשוטה',\n    'zh-Hant': 'סינית מסורתית'\n  };\n  const detectLanguage = async text => {\n    try {\n      const response = await fetch(`${process.env.REACT_APP_AZURE_TRANSLATOR_ENDPOINT}/detect?api-version=3.0`, {\n        method: 'POST',\n        headers: {\n          'Ocp-Apim-Subscription-Key': process.env.REACT_APP_AZURE_TRANSLATOR_KEY,\n          'Ocp-Apim-Subscription-Region': process.env.REACT_APP_AZURE_REGION,\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify([{\n          text\n        }])\n      });\n      if (!response.ok) {\n        throw new Error('שגיאה בזיהוי השפה');\n      }\n      const data = await response.json();\n      return data[0].language;\n    } catch (error) {\n      console.error('שגיאה בזיהוי השפה:', error);\n      return null;\n    }\n  };\n  const handleFileUpload = async event => {\n    const file = event.target.files[0];\n    if (file) {\n      setSelectedFile(file);\n      setMessage('');\n      setIsLoading(true);\n      setTranslatedContent('');\n      setDetectedLanguage('');\n      try {\n        const content = await readFileContent(file);\n        setFileContent(content);\n        const detectedLang = await detectLanguage(content);\n        if (detectedLang) {\n          setDetectedLanguage(detectedLang);\n          setMessage(`הקובץ הועלה בהצלחה! שפה מזוהה: ${languages[detectedLang] || detectedLang}`);\n        } else {\n          setMessage('הקובץ הועלה בהצלחה!');\n        }\n        await uploadFile(file);\n      } catch (error) {\n        setMessage('שגיאה בהעלאת הקובץ: ' + error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    }\n  };\n  const readFileContent = file => {\n    return new Promise((resolve, reject) => {\n      const reader = new FileReader();\n      reader.onload = e => resolve(e.target.result);\n      reader.onerror = e => reject(e);\n      reader.readAsText(file);\n    });\n  };\n  const handleTranslate = async () => {\n    if (!fileContent) return;\n    setIsLoading(true);\n    setTranslationProgress(0);\n    try {\n      const translated = await translateSRT(fileContent, targetLanguage, progress => {\n        setTranslationProgress(progress);\n      });\n      setTranslatedContent(translated);\n      setMessage(`תורגם בהצלחה ל${languages[targetLanguage]}`);\n    } catch (error) {\n      setMessage('שגיאה בתרגום: ' + error.message);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const handleDownload = () => {\n    if (!translatedContent) return;\n    const blob = new Blob([translatedContent], {\n      type: 'text/plain;charset=utf-8'\n    });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = selectedFile ? `translated_${selectedFile.name}` : 'translated.srt';\n    document.body.appendChild(a);\n    a.click();\n    document.body.removeChild(a);\n    URL.revokeObjectURL(url);\n  };\n  const interfaceLanguages = {\n    he: 'עברית',\n    en: 'English',\n    ar: 'العربية',\n    ru: 'Русский'\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: `${styles.container} ${isDarkMode ? styles.dark : ''}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.header,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"select\", {\n    value: interfaceLanguage,\n    onChange: e => changeLanguage(e.target.value),\n    className: styles.languageSelector,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 9\n    }\n  }, Object.entries(interfaceLanguages).map(([code, name]) => /*#__PURE__*/React.createElement(\"option\", {\n    key: code,\n    value: code,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 13\n    }\n  }, name))), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: toggleTheme,\n    className: styles.themeToggle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 9\n    }\n  }, isDarkMode ? '☀️' : '🌙')), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.uploadSection,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: styles.fileInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    accept: \".srt\",\n    onChange: handleFileUpload,\n    disabled: isLoading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 11\n    }\n  }, t.uploadFile))), fileContent && /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.translationSection,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 9\n    }\n  }, detectedLanguage && /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.detectedLanguage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 13\n    }\n  }, t.detectedLanguage, \" \", languages[detectedLanguage]), /*#__PURE__*/React.createElement(\"select\", {\n    className: styles.targetLanguageSelect,\n    value: targetLanguage,\n    onChange: e => setTargetLanguage(e.target.value),\n    disabled: isLoading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 13\n    }\n  }, t.selectTargetLanguage), Object.entries(languages).filter(([code]) => code !== detectedLanguage).map(([code, name]) => /*#__PURE__*/React.createElement(\"option\", {\n    key: code,\n    value: code,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 17\n    }\n  }, name))), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleTranslate,\n    disabled: isLoading || targetLanguage === detectedLanguage,\n    className: styles.translateButton,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 11\n    }\n  }, isLoading ? t.translating : t.translate)), isLoading && translationProgress > 0 && /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.progressContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.progressBar,\n    style: {\n      width: `${translationProgress}%`\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 11\n    }\n  }, translationProgress, \"%\")), message && /*#__PURE__*/React.createElement(\"div\", {\n    className: `${styles.message} ${styles.fadeIn}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 9\n    }\n  }, message), translatedContent && !isLoading && /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleDownload,\n    className: `${styles.downloadButton} ${styles.fadeIn}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 9\n    }\n  }, t.downloadFile), translatedContent && /*#__PURE__*/React.createElement(SubtitlePreview, {\n    content: translatedContent,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 9\n    }\n  }));\n}\nexport default FileUploader;","map":{"version":3,"names":["React","useState","useEffect","uploadFile","SubtitlePreview","styles","translateSRT","useApp","FileUploader","t","interfaceLanguage","isDarkMode","changeLanguage","toggleTheme","isLoading","setIsLoading","message","setMessage","selectedFile","setSelectedFile","fileContent","setFileContent","targetLanguage","setTargetLanguage","translatedContent","setTranslatedContent","translationProgress","setTranslationProgress","detectedLanguage","setDetectedLanguage","languages","detectLanguage","text","response","fetch","process","env","REACT_APP_AZURE_TRANSLATOR_ENDPOINT","method","headers","REACT_APP_AZURE_TRANSLATOR_KEY","REACT_APP_AZURE_REGION","body","JSON","stringify","ok","Error","data","json","language","error","console","handleFileUpload","event","file","target","files","content","readFileContent","detectedLang","Promise","resolve","reject","reader","FileReader","onload","e","result","onerror","readAsText","handleTranslate","translated","progress","handleDownload","blob","Blob","type","url","URL","createObjectURL","a","document","createElement","href","download","name","appendChild","click","removeChild","revokeObjectURL","interfaceLanguages","he","en","ar","ru","className","container","dark","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","header","value","onChange","languageSelector","Object","entries","map","code","key","onClick","themeToggle","uploadSection","fileInput","accept","disabled","translationSection","targetLanguageSelect","selectTargetLanguage","filter","translateButton","translating","translate","progressContainer","progressBar","style","width","fadeIn","downloadButton","downloadFile"],"sources":["C:/Users/Liran/.cursor-tutor/srt-translator/src/components/FileUploader.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { uploadFile } from '../client'\r\nimport SubtitlePreview from './SubtitlePreview'\r\nimport styles from './FileUploader.module.css'\r\nimport { translateSRT } from '../client'\r\nimport { useApp } from '../context/AppContext'\r\n\r\nfunction FileUploader() {\r\n  const { t, interfaceLanguage, isDarkMode, changeLanguage, toggleTheme } = useApp()\r\n  const [isLoading, setIsLoading] = useState(false)\r\n  const [message, setMessage] = useState('')\r\n  const [selectedFile, setSelectedFile] = useState(null)\r\n  const [fileContent, setFileContent] = useState('')\r\n  const [targetLanguage, setTargetLanguage] = useState('he')\r\n  const [translatedContent, setTranslatedContent] = useState('')\r\n  const [translationProgress, setTranslationProgress] = useState(0)\r\n  const [detectedLanguage, setDetectedLanguage] = useState('')\r\n\r\n  const languages = {\r\n    'af': 'אפריקאנס',\r\n    'ar': 'ערבית',\r\n    'bg': 'בולגרית',\r\n    'bn': 'בנגלית',\r\n    'bs': 'בוסנית',\r\n    'ca': 'קטלאנית',\r\n    'cs': 'צ׳כית',\r\n    'cy': 'וולשית',\r\n    'da': 'דנית',\r\n    'de': 'גרמנית',\r\n    'el': 'יוונית',\r\n    'en': 'אנגלית',\r\n    'es': 'ספרדית',\r\n    'et': 'אסטונית',\r\n    'fa': 'פרסית',\r\n    'fi': 'פינית',\r\n    'fr': 'צרפתית',\r\n    'he': 'עברית',\r\n    'hi': 'הינדי',\r\n    'hr': 'קרואטית',\r\n    'hu': 'הונגרית',\r\n    'id': 'אינדונזית',\r\n    'is': 'איסלנדית',\r\n    'it': 'איטלקית',\r\n    'ja': 'יפנית',\r\n    'ko': 'קוריאנית',\r\n    'lt': 'ליטאית',\r\n    'lv': 'לטבית',\r\n    'ms': 'מלאית',\r\n    'mt': 'מלטזית',\r\n    'nl': 'הולנדית',\r\n    'no': 'נורווגית',\r\n    'pl': 'פולנית',\r\n    'pt': 'פורטוגזית',\r\n    'ro': 'רומנית',\r\n    'ru': 'רוסית',\r\n    'sk': 'סלובקית',\r\n    'sl': 'סלובנית',\r\n    'sv': 'שוודית',\r\n    'sw': 'סווהילי',\r\n    'th': 'תאית',\r\n    'tr': 'טורקית',\r\n    'uk': 'אוקראינית',\r\n    'ur': 'אורדו',\r\n    'vi': 'וייטנאמית',\r\n    'zh-Hans': 'סינית פשוטה',\r\n    'zh-Hant': 'סינית מסורתית'\r\n  }\r\n\r\n  const detectLanguage = async (text) => {\r\n    try {\r\n      const response = await fetch(`${process.env.REACT_APP_AZURE_TRANSLATOR_ENDPOINT}/detect?api-version=3.0`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Ocp-Apim-Subscription-Key': process.env.REACT_APP_AZURE_TRANSLATOR_KEY,\r\n          'Ocp-Apim-Subscription-Region': process.env.REACT_APP_AZURE_REGION,\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify([{ text }])\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error('שגיאה בזיהוי השפה');\r\n      }\r\n\r\n      const data = await response.json();\r\n      return data[0].language;\r\n    } catch (error) {\r\n      console.error('שגיאה בזיהוי השפה:', error);\r\n      return null;\r\n    }\r\n  }\r\n\r\n  const handleFileUpload = async (event) => {\r\n    const file = event.target.files[0]\r\n    if (file) {\r\n      setSelectedFile(file)\r\n      setMessage('')\r\n      setIsLoading(true)\r\n      setTranslatedContent('')\r\n      setDetectedLanguage('')\r\n      \r\n      try {\r\n        const content = await readFileContent(file)\r\n        setFileContent(content)\r\n        \r\n        const detectedLang = await detectLanguage(content)\r\n        if (detectedLang) {\r\n          setDetectedLanguage(detectedLang)\r\n          setMessage(`הקובץ הועלה בהצלחה! שפה מזוהה: ${languages[detectedLang] || detectedLang}`)\r\n        } else {\r\n          setMessage('הקובץ הועלה בהצלחה!')\r\n        }\r\n        \r\n        await uploadFile(file)\r\n      } catch (error) {\r\n        setMessage('שגיאה בהעלאת הקובץ: ' + error.message)\r\n      } finally {\r\n        setIsLoading(false)\r\n      }\r\n    }\r\n  }\r\n\r\n  const readFileContent = (file) => {\r\n    return new Promise((resolve, reject) => {\r\n      const reader = new FileReader()\r\n      reader.onload = (e) => resolve(e.target.result)\r\n      reader.onerror = (e) => reject(e)\r\n      reader.readAsText(file)\r\n    })\r\n  }\r\n\r\n  const handleTranslate = async () => {\r\n    if (!fileContent) return;\r\n    \r\n    setIsLoading(true);\r\n    setTranslationProgress(0);\r\n    \r\n    try {\r\n      const translated = await translateSRT(fileContent, targetLanguage, (progress) => {\r\n        setTranslationProgress(progress);\r\n      });\r\n      \r\n      setTranslatedContent(translated);\r\n      setMessage(`תורגם בהצלחה ל${languages[targetLanguage]}`);\r\n    } catch (error) {\r\n      setMessage('שגיאה בתרגום: ' + error.message);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleDownload = () => {\r\n    if (!translatedContent) return;\r\n\r\n    const blob = new Blob([translatedContent], { type: 'text/plain;charset=utf-8' });\r\n    const url = URL.createObjectURL(blob);\r\n    const a = document.createElement('a');\r\n    a.href = url;\r\n    a.download = selectedFile ? `translated_${selectedFile.name}` : 'translated.srt';\r\n    document.body.appendChild(a);\r\n    a.click();\r\n    document.body.removeChild(a);\r\n    URL.revokeObjectURL(url);\r\n  };\r\n\r\n  const interfaceLanguages = {\r\n    he: 'עברית',\r\n    en: 'English',\r\n    ar: 'العربية',\r\n    ru: 'Русский'\r\n  };\r\n\r\n  return (\r\n    <div className={`${styles.container} ${isDarkMode ? styles.dark : ''}`}>\r\n      <div className={styles.header}>\r\n        <select\r\n          value={interfaceLanguage}\r\n          onChange={(e) => changeLanguage(e.target.value)}\r\n          className={styles.languageSelector}\r\n        >\r\n          {Object.entries(interfaceLanguages).map(([code, name]) => (\r\n            <option key={code} value={code}>{name}</option>\r\n          ))}\r\n        </select>\r\n        \r\n        <button \r\n          onClick={toggleTheme}\r\n          className={styles.themeToggle}\r\n        >\r\n          {isDarkMode ? '☀️' : '🌙'}\r\n        </button>\r\n      </div>\r\n\r\n      <div className={styles.uploadSection}>\r\n        <label className={styles.fileInput}>\r\n          <input\r\n            type=\"file\"\r\n            accept=\".srt\"\r\n            onChange={handleFileUpload}\r\n            disabled={isLoading}\r\n          />\r\n          <span>{t.uploadFile}</span>\r\n        </label>\r\n      </div>\r\n\r\n      {fileContent && (\r\n        <div className={styles.translationSection}>\r\n          {detectedLanguage && (\r\n            <div className={styles.detectedLanguage}>\r\n              {t.detectedLanguage} {languages[detectedLanguage]}\r\n            </div>\r\n          )}\r\n          \r\n          <select\r\n            className={styles.targetLanguageSelect}\r\n            value={targetLanguage}\r\n            onChange={(e) => setTargetLanguage(e.target.value)}\r\n            disabled={isLoading}\r\n          >\r\n            <option value=\"\">{t.selectTargetLanguage}</option>\r\n            {Object.entries(languages)\r\n              .filter(([code]) => code !== detectedLanguage)\r\n              .map(([code, name]) => (\r\n                <option key={code} value={code}>{name}</option>\r\n              ))}\r\n          </select>\r\n\r\n          <button\r\n            onClick={handleTranslate}\r\n            disabled={isLoading || targetLanguage === detectedLanguage}\r\n            className={styles.translateButton}\r\n          >\r\n            {isLoading ? t.translating : t.translate}\r\n          </button>\r\n        </div>\r\n      )}\r\n\r\n      {isLoading && translationProgress > 0 && (\r\n        <div className={styles.progressContainer}>\r\n          <div\r\n            className={styles.progressBar}\r\n            style={{ width: `${translationProgress}%` }}\r\n          >\r\n            {translationProgress}%\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {message && (\r\n        <div className={`${styles.message} ${styles.fadeIn}`}>\r\n          {message}\r\n        </div>\r\n      )}\r\n\r\n      {translatedContent && !isLoading && (\r\n        <button\r\n          onClick={handleDownload}\r\n          className={`${styles.downloadButton} ${styles.fadeIn}`}\r\n        >\r\n          {t.downloadFile}\r\n        </button>\r\n      )}\r\n\r\n      {translatedContent && (\r\n        <SubtitlePreview content={translatedContent} />\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default FileUploader"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}