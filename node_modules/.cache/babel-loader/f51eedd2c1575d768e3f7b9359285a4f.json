{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Liran\\\\.cursor-tutor\\\\srt-translator\\\\src\\\\components\\\\FileUploader.js\";\nimport React, { useState } from 'react';\nimport { uploadFile, translateSRT } from '../client';\nimport SubtitlePreview from './SubtitlePreview';\nimport styles from './FileUploader.module.css';\nfunction FileUploader() {\n  const [isLoading, setIsLoading] = useState(false);\n  const [message, setMessage] = useState('');\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [fileContent, setFileContent] = useState('');\n  const [targetLanguage, setTargetLanguage] = useState('en');\n  const [translatedContent, setTranslatedContent] = useState('');\n  const [translationProgress, setTranslationProgress] = useState(0);\n  const languages = {\n    he: 'עברית',\n    en: 'אנגלית',\n    es: 'ספרדית',\n    fr: 'צרפתית',\n    de: 'גרמנית',\n    ru: 'רוסית',\n    ar: 'ערבית'\n  };\n  const handleFileUpload = async event => {\n    const file = event.target.files[0];\n    if (file) {\n      setSelectedFile(file);\n      setMessage('');\n      setIsLoading(true);\n      try {\n        // קריאת תוכן הקובץ\n        const content = await readFileContent(file);\n        setFileContent(content);\n\n        // העלאה לשרת\n        await uploadFile(file);\n        setMessage('הקובץ הועלה בהצלחה!');\n      } catch (error) {\n        setMessage('שגיאה בהעלאת הקובץ: ' + error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    }\n  };\n  const readFileContent = file => {\n    return new Promise((resolve, reject) => {\n      const reader = new FileReader();\n      reader.onload = e => resolve(e.target.result);\n      reader.onerror = e => reject(e);\n      reader.readAsText(file);\n    });\n  };\n  const handleTranslate = async () => {\n    if (!fileContent) return;\n    setIsLoading(true);\n    setTranslationProgress(0);\n    try {\n      console.log('מתחיל תרגום...'); // לוג לבדיקה\n      const translated = await translateSRT(fileContent, targetLanguage);\n      console.log('התרגום הושלם'); // לוג לבדיקה\n      setTranslatedContent(translated);\n      setMessage(`תורגם בהצלחה ל${languages[targetLanguage]}`);\n    } catch (error) {\n      console.error('שגיאת תרגום:', error); // לוג לבדיקה\n      setMessage('שגיאה בתרגום: ' + error.message);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.dropzone,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    accept: \".srt\",\n    onChange: handleFileUpload,\n    id: \"file-upload\",\n    className: styles.fileInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"file-upload\",\n    className: styles.uploadButton,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }\n  }, isLoading ? 'מעלה...' : 'בחר קובץ כתוביות')), message && /*#__PURE__*/React.createElement(\"div\", {\n    className: message.includes('שגיאה') ? styles.error : styles.success,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }\n  }, message), fileContent && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(SubtitlePreview, {\n    content: fileContent,\n    isTranslated: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.controls,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"select\", {\n    className: styles.languageSelect,\n    value: targetLanguage,\n    onChange: e => setTargetLanguage(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }\n  }, Object.entries(languages).map(([code, name]) => /*#__PURE__*/React.createElement(\"option\", {\n    key: code,\n    value: code,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 17\n    }\n  }, name))), /*#__PURE__*/React.createElement(\"button\", {\n    className: styles.translateButton,\n    onClick: handleTranslate,\n    disabled: isLoading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }\n  }, isLoading ? 'מתרגם...' : 'תרגם'))), translatedContent && /*#__PURE__*/React.createElement(SubtitlePreview, {\n    content: translatedContent,\n    isTranslated: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 9\n    }\n  }));\n}\nexport default FileUploader;","map":{"version":3,"names":["React","useState","uploadFile","translateSRT","SubtitlePreview","styles","FileUploader","isLoading","setIsLoading","message","setMessage","selectedFile","setSelectedFile","fileContent","setFileContent","targetLanguage","setTargetLanguage","translatedContent","setTranslatedContent","translationProgress","setTranslationProgress","languages","he","en","es","fr","de","ru","ar","handleFileUpload","event","file","target","files","content","readFileContent","error","Promise","resolve","reject","reader","FileReader","onload","e","result","onerror","readAsText","handleTranslate","console","log","translated","createElement","className","container","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","dropzone","type","accept","onChange","id","fileInput","htmlFor","uploadButton","includes","success","Fragment","isTranslated","controls","languageSelect","value","Object","entries","map","code","name","key","translateButton","onClick","disabled"],"sources":["C:/Users/Liran/.cursor-tutor/srt-translator/src/components/FileUploader.js"],"sourcesContent":["import React, { useState } from 'react'\r\nimport { uploadFile, translateSRT } from '../client'\r\nimport SubtitlePreview from './SubtitlePreview'\r\nimport styles from './FileUploader.module.css'\r\n\r\nfunction FileUploader() {\r\n  const [isLoading, setIsLoading] = useState(false)\r\n  const [message, setMessage] = useState('')\r\n  const [selectedFile, setSelectedFile] = useState(null)\r\n  const [fileContent, setFileContent] = useState('')\r\n  const [targetLanguage, setTargetLanguage] = useState('en')\r\n  const [translatedContent, setTranslatedContent] = useState('')\r\n  const [translationProgress, setTranslationProgress] = useState(0)\r\n\r\n  const languages = {\r\n    he: 'עברית',\r\n    en: 'אנגלית',\r\n    es: 'ספרדית',\r\n    fr: 'צרפתית',\r\n    de: 'גרמנית',\r\n    ru: 'רוסית',\r\n    ar: 'ערבית'\r\n  }\r\n\r\n  const handleFileUpload = async (event) => {\r\n    const file = event.target.files[0]\r\n    if (file) {\r\n      setSelectedFile(file)\r\n      setMessage('')\r\n      setIsLoading(true)\r\n      \r\n      try {\r\n        // קריאת תוכן הקובץ\r\n        const content = await readFileContent(file)\r\n        setFileContent(content)\r\n        \r\n        // העלאה לשרת\r\n        await uploadFile(file)\r\n        setMessage('הקובץ הועלה בהצלחה!')\r\n      } catch (error) {\r\n        setMessage('שגיאה בהעלאת הקובץ: ' + error.message)\r\n      } finally {\r\n        setIsLoading(false)\r\n      }\r\n    }\r\n  }\r\n\r\n  const readFileContent = (file) => {\r\n    return new Promise((resolve, reject) => {\r\n      const reader = new FileReader()\r\n      reader.onload = (e) => resolve(e.target.result)\r\n      reader.onerror = (e) => reject(e)\r\n      reader.readAsText(file)\r\n    })\r\n  }\r\n\r\n  const handleTranslate = async () => {\r\n    if (!fileContent) return\r\n    \r\n    setIsLoading(true)\r\n    setTranslationProgress(0)\r\n    \r\n    try {\r\n      console.log('מתחיל תרגום...') // לוג לבדיקה\r\n      const translated = await translateSRT(fileContent, targetLanguage)\r\n      console.log('התרגום הושלם') // לוג לבדיקה\r\n      setTranslatedContent(translated)\r\n      setMessage(`תורגם בהצלחה ל${languages[targetLanguage]}`)\r\n    } catch (error) {\r\n      console.error('שגיאת תרגום:', error) // לוג לבדיקה\r\n      setMessage('שגיאה בתרגום: ' + error.message)\r\n    } finally {\r\n      setIsLoading(false)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <div className={styles.dropzone}>\r\n        <input \r\n          type=\"file\" \r\n          accept=\".srt\" \r\n          onChange={handleFileUpload}\r\n          id=\"file-upload\"\r\n          className={styles.fileInput}\r\n        />\r\n        <label htmlFor=\"file-upload\" className={styles.uploadButton}>\r\n          {isLoading ? 'מעלה...' : 'בחר קובץ כתוביות'}\r\n        </label>\r\n      </div>\r\n\r\n      {message && (\r\n        <div className={message.includes('שגיאה') ? styles.error : styles.success}>\r\n          {message}\r\n        </div>\r\n      )}\r\n\r\n      {fileContent && (\r\n        <>\r\n          <SubtitlePreview content={fileContent} isTranslated={false} />\r\n          \r\n          <div className={styles.controls}>\r\n            <select \r\n              className={styles.languageSelect}\r\n              value={targetLanguage}\r\n              onChange={(e) => setTargetLanguage(e.target.value)}\r\n            >\r\n              {Object.entries(languages).map(([code, name]) => (\r\n                <option key={code} value={code}>\r\n                  {name}\r\n                </option>\r\n              ))}\r\n            </select>\r\n            \r\n            <button \r\n              className={styles.translateButton}\r\n              onClick={handleTranslate}\r\n              disabled={isLoading}\r\n            >\r\n              {isLoading ? 'מתרגם...' : 'תרגם'}\r\n            </button>\r\n          </div>\r\n        </>\r\n      )}\r\n\r\n      {translatedContent && (\r\n        <SubtitlePreview content={translatedContent} isTranslated={true} />\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default FileUploader"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}