{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Liran\\\\.cursor-tutor\\\\srt-translator\\\\src\\\\components\\\\FileUploader.js\";\nimport { useState, useEffect } from 'react';\nimport { uploadFile, getFiles } from '../client';\nimport styles from './FileUploader.module.css';\nfunction FileUploader() {\n  const [isLoading, setIsLoading] = useState(false);\n  const [message, setMessage] = useState('');\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [fileContent, setFileContent] = useState('');\n  const [targetLanguage, setTargetLanguage] = useState('en');\n  const [translatedContent, setTranslatedContent] = useState('');\n  const handleFileUpload = async event => {\n    const file = event.target.files[0];\n    if (file) {\n      setSelectedFile(file);\n      setMessage('');\n      setIsLoading(true);\n      try {\n        // קריאת תוכן הקובץ\n        const content = await readFileContent(file);\n        setFileContent(content);\n\n        // העלאה לשרת\n        await uploadFile(file);\n        setMessage('הקובץ הועלה בהצלחה!');\n      } catch (error) {\n        setMessage('שגיאה בהעלאת הקובץ: ' + error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    }\n  };\n  const readFileContent = file => {\n    return new Promise((resolve, reject) => {\n      const reader = new FileReader();\n      reader.onload = e => resolve(e.target.result);\n      reader.onerror = e => reject(e);\n      reader.readAsText(file);\n    });\n  };\n  const handleTranslate = async () => {\n    if (!fileContent) return;\n    setIsLoading(true);\n    try {\n      // כאן נוסיף את הלוגיקה של התרגום\n      // לדוגמה, שימוש ב-API של תרגום\n      setTranslatedContent('תוכן מתורגם יופיע כאן...');\n    } catch (error) {\n      setMessage('שגיאה בתרגום: ' + error.message);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.dropzone,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    accept: \".srt\",\n    onChange: handleFileUpload,\n    id: \"file-upload\",\n    className: styles.fileInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"file-upload\",\n    className: styles.uploadButton,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }, isLoading ? 'מעלה...' : 'בחר קובץ כתוביות')), message && /*#__PURE__*/React.createElement(\"div\", {\n    className: message.includes('שגיאה') ? styles.error : styles.success,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  }, message), fileContent && /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.preview,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 11\n    }\n  }, \"\\u05EA\\u05E6\\u05D5\\u05D2\\u05D4 \\u05DE\\u05E7\\u05D3\\u05D9\\u05DE\\u05D4:\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.previewContent,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 11\n    }\n  }, fileContent.slice(0, 500), \"... \"), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.controls,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"select\", {\n    className: styles.languageSelect,\n    value: targetLanguage,\n    onChange: e => setTargetLanguage(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"en\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 15\n    }\n  }, \"\\u05D0\\u05E0\\u05D2\\u05DC\\u05D9\\u05EA\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"es\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 15\n    }\n  }, \"\\u05E1\\u05E4\\u05E8\\u05D3\\u05D9\\u05EA\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"fr\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 15\n    }\n  }, \"\\u05E6\\u05E8\\u05E4\\u05EA\\u05D9\\u05EA\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"de\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 15\n    }\n  }, \"\\u05D2\\u05E8\\u05DE\\u05E0\\u05D9\\u05EA\")), /*#__PURE__*/React.createElement(\"button\", {\n    className: styles.translateButton,\n    onClick: handleTranslate,\n    disabled: isLoading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }\n  }, \"\\u05EA\\u05E8\\u05D2\\u05DD\"))), translatedContent && /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.preview,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 11\n    }\n  }, \"\\u05EA\\u05E8\\u05D2\\u05D5\\u05DD:\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.previewContent,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 11\n    }\n  }, translatedContent)), isLoading && /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.loader,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 21\n    }\n  }));\n}\nexport default FileUploader;","map":{"version":3,"names":["useState","useEffect","uploadFile","getFiles","styles","FileUploader","isLoading","setIsLoading","message","setMessage","selectedFile","setSelectedFile","fileContent","setFileContent","targetLanguage","setTargetLanguage","translatedContent","setTranslatedContent","handleFileUpload","event","file","target","files","content","readFileContent","error","Promise","resolve","reject","reader","FileReader","onload","e","result","onerror","readAsText","handleTranslate","React","createElement","className","container","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","dropzone","type","accept","onChange","id","fileInput","htmlFor","uploadButton","includes","success","preview","previewContent","slice","controls","languageSelect","value","translateButton","onClick","disabled","loader"],"sources":["C:/Users/Liran/.cursor-tutor/srt-translator/src/components/FileUploader.js"],"sourcesContent":["import { useState, useEffect } from 'react'\r\nimport { uploadFile, getFiles } from '../client'\r\nimport styles from './FileUploader.module.css'\r\n\r\nfunction FileUploader() {\r\n  const [isLoading, setIsLoading] = useState(false)\r\n  const [message, setMessage] = useState('')\r\n  const [selectedFile, setSelectedFile] = useState(null)\r\n  const [fileContent, setFileContent] = useState('')\r\n  const [targetLanguage, setTargetLanguage] = useState('en')\r\n  const [translatedContent, setTranslatedContent] = useState('')\r\n\r\n  const handleFileUpload = async (event) => {\r\n    const file = event.target.files[0]\r\n    if (file) {\r\n      setSelectedFile(file)\r\n      setMessage('')\r\n      setIsLoading(true)\r\n      \r\n      try {\r\n        // קריאת תוכן הקובץ\r\n        const content = await readFileContent(file)\r\n        setFileContent(content)\r\n        \r\n        // העלאה לשרת\r\n        await uploadFile(file)\r\n        setMessage('הקובץ הועלה בהצלחה!')\r\n      } catch (error) {\r\n        setMessage('שגיאה בהעלאת הקובץ: ' + error.message)\r\n      } finally {\r\n        setIsLoading(false)\r\n      }\r\n    }\r\n  }\r\n\r\n  const readFileContent = (file) => {\r\n    return new Promise((resolve, reject) => {\r\n      const reader = new FileReader()\r\n      reader.onload = (e) => resolve(e.target.result)\r\n      reader.onerror = (e) => reject(e)\r\n      reader.readAsText(file)\r\n    })\r\n  }\r\n\r\n  const handleTranslate = async () => {\r\n    if (!fileContent) return\r\n    \r\n    setIsLoading(true)\r\n    try {\r\n      // כאן נוסיף את הלוגיקה של התרגום\r\n      // לדוגמה, שימוש ב-API של תרגום\r\n      setTranslatedContent('תוכן מתורגם יופיע כאן...')\r\n    } catch (error) {\r\n      setMessage('שגיאה בתרגום: ' + error.message)\r\n    } finally {\r\n      setIsLoading(false)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <div className={styles.dropzone}>\r\n        <input \r\n          type=\"file\" \r\n          accept=\".srt\" \r\n          onChange={handleFileUpload}\r\n          id=\"file-upload\"\r\n          className={styles.fileInput}\r\n        />\r\n        <label htmlFor=\"file-upload\" className={styles.uploadButton}>\r\n          {isLoading ? 'מעלה...' : 'בחר קובץ כתוביות'}\r\n        </label>\r\n      </div>\r\n\r\n      {message && (\r\n        <div className={message.includes('שגיאה') ? styles.error : styles.success}>\r\n          {message}\r\n        </div>\r\n      )}\r\n\r\n      {fileContent && (\r\n        <div className={styles.preview}>\r\n          <h3>תצוגה מקדימה:</h3>\r\n          <div className={styles.previewContent}>\r\n            {fileContent.slice(0, 500)}... {/* מציג רק את 500 התווים הראשונים */}\r\n          </div>\r\n          \r\n          <div className={styles.controls}>\r\n            <select \r\n              className={styles.languageSelect}\r\n              value={targetLanguage}\r\n              onChange={(e) => setTargetLanguage(e.target.value)}\r\n            >\r\n              <option value=\"en\">אנגלית</option>\r\n              <option value=\"es\">ספרדית</option>\r\n              <option value=\"fr\">צרפתית</option>\r\n              <option value=\"de\">גרמנית</option>\r\n            </select>\r\n            \r\n            <button \r\n              className={styles.translateButton}\r\n              onClick={handleTranslate}\r\n              disabled={isLoading}\r\n            >\r\n              תרגם\r\n            </button>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {translatedContent && (\r\n        <div className={styles.preview}>\r\n          <h3>תרגום:</h3>\r\n          <div className={styles.previewContent}>\r\n            {translatedContent}\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {isLoading && <div className={styles.loader} />}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default FileUploader"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}